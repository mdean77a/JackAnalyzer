// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
	Xor(a=true, b=address[14],out=ram16Address);
	And(a=address[14], b= address[13], out = keyboardAddress);
	Not(in=ram16Address, out = notScreen);
	Not(in = keyboardAddress, out = notKeyboard);
	And(a= notScreen,b=notKeyboard, out=screenAddress);
	// Now I have ram, screen or keyboard as true
	// Use these as the load and shoot into all three
	And(a=ram16Address, b=load, out=ramLoad);
	And(a=screenAddress, b=load, out=screenLoad);
	RAM16K(in=in,load=ramLoad, address=address[0..13], out=outRam);
	Screen(in=in, load=screenLoad, address=address[0..12], out=outScreen);
	Keyboard(out=outKey);
	// Now figure out the single output of the whole RAM
	Mux16(a=false, b=outRam, sel=ram16Address, out=firstMuxOut);
	Mux16(b=outScreen, a=firstMuxOut, sel=screenAddress, out=secondMuxOut);
	Mux16(b=outKey, a=secondMuxOut, sel=keyboardAddress, out=out);


	
}